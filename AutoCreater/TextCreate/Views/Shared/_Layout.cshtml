<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link href="~/Content/ElementUI/element-ui.css" rel="stylesheet" />

    
    @RenderSection("cut_head", required: false)
    <style>
        html, body {
            height: 100%;
            padding: 0px;
            margin: 0px;
        }

        #page_content{
            height:100%;
        }
        .el-container 
        {
            height:100%;
        }
    </style>

</head>
<body>
    <div id="page_content">
        @RenderBody()
    </div>

    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/ElementUI/element-ui.js"></script>
    <script src="~/Scripts/commfun.js"></script>
    @RenderSection("scripts", required: true)
</body>
</html>
@*子页面在scripts中声名对象  vue_data={a:'',b:''}  =>vue中的data ,vue_methods={aa:function(){},bb:function(){}}=> view中的methods ,viewAfter =function(){} => vue页面生成完成后调用的方法*@
<script>

    Date.prototype.format = function (mask) {
        var d = this;
        var zeroize = function (value, length) {
            if (!length) length = 2;
            value = String(value);
            for (var i = 0, zeros = ''; i < (length - value.length) ; i++) {
                zeros += '0';
            }
            return zeros + value;
        };

        return mask.replace(/"[^"]*"|'[^']*'|\b(?:d{1,4}|m{1,4}|yy(?:yy)?|([hHMstT])\1?|[lLZ])\b/g, function ($0) {
            switch ($0) {
                case 'd':
                    return d.getDate();
                case 'dd':
                    return zeroize(d.getDate());
                case 'ddd':
                    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thr', 'Fri', 'Sat'][d.getDay()];
                case 'dddd':
                    return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][d.getDay()];
                case 'M':
                    return d.getMonth() + 1;
                case 'MM':
                    return zeroize(d.getMonth() + 1);
                case 'MMM':
                    return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][d.getMonth()];
                case 'MMMM':
                    return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][d.getMonth()];
                case 'yy':
                    return String(d.getFullYear()).substr(2);
                case 'yyyy':
                    return d.getFullYear();
                case 'h':
                    return d.getHours() % 12 || 12;
                case 'hh':
                    return zeroize(d.getHours() % 12 || 12);
                case 'H':
                    return d.getHours();
                case 'HH':
                    return zeroize(d.getHours());
                case 'm':
                    return d.getMinutes();
                case 'mm':
                    return zeroize(d.getMinutes());
                case 's':
                    return d.getSeconds();
                case 'ss':
                    return zeroize(d.getSeconds());
                case 'l':
                    return zeroize(d.getMilliseconds(), 3);
                case 'L':
                    var m = d.getMilliseconds();
                    if (m > 99) m = Math.round(m / 10);
                    return zeroize(m);
                case 'tt':
                    return d.getHours() < 12 ? 'am' : 'pm';
                case 'TT':
                    return d.getHours() < 12 ? 'AM' : 'PM';
                case 'Z':
                    return d.toUTCString().match(/[A-Z]+$/);
                    // Return quoted strings with the surrounding quotes removed
                default:
                    return $0.substr(1, $0.length - 2);
            }
        });
    };

    //添加子页面加载时的load
    vue_data.fra_loading = false;

    var baseUrl = '@Url.Content("~/")';
    var vueObj = new Vue({
            el: '#page_content',
            data: window.vue_data,
            mounted: function () {
                this.$nextTick(function () {
                    if (window.viewAfter) {
                        viewAfter.call(this);
                    }
                });
            },
            methods:window.vue_methods
    });




</script>
